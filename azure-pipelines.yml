trigger:
- master
pr:
- master
jobs:
- job: run_tests
  displayName: Run Unit Tests
  pool:
    vmImage: ubuntu-20.04
  strategy:
    matrix:
      stable:
        rustup_toolchain: stable
      beta:
        rustup_toolchain: beta
      nightly:
        rustup_toolchain: nightly
  steps:
    - script: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: Install rust
    - script: |
        sudo apt-get update
        sudo apt-get install -y libblkid-dev libattr1-dev libcurl4-openssl-dev libelf-dev libdw-dev cmake gcc binutils-dev libiberty-dev zlib1g-dev libssl-dev
      displayName: Install dependencies
    - script: |
        sudo apt-get update
        sudo apt-get install zfsutils-linux libnvpair1linux libzfslinux-dev
      displayName: Install ZFS on Linux
    - script: |
        dd if=/dev/zero of=loop99 bs=1M count=96
        sudo losetup /dev/loop99 `pwd`/loop99
      displayName: Setup loop device
    - script: |
        curl -LSfs https://japaric.github.io/trust/install.sh | sh -s -- --git andoriyu/cargo-suity
        sudo ln -s /home/vsts/.cargo/bin/cargo-suity /usr/local/bin/
      displayName: Install suity
    - script: |
        CARGO=$(which cargo)
        RUSTFLAGS="-C link-dead-code" $CARGO test --no-run
        mkdir test-results
        sudo RUSTFLAGS="-C link-dead-code" $CARGO suity
      displayName: Run Tests
    - script: |
        sudo sh -c "zpool list -H -oname | grep test | xargs zpool destroy"
        RUSTFLAGS="--cfg procmacro2_semver_exempt" cargo install cargo-tarpaulin -f
        sudo RUSTFLAGS="-C link-dead-code" $(which cargo) tarpaulin --out Xml
        bash <(curl -s https://codecov.io/bash)
      displayName: Run Coverage
      condition: and(succeeded(),eq(variables['rustup_toolchain'], 'nightly'))
    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: $(System.DefaultWorkingDirectory)/**/cobertura.xml
      condition: and(succeeded(),eq(variables['rustup_toolchain'], 'nightly'))
    - task: PublishTestResults@2
      inputs:
        testRunner: JUnit
        testResultsFiles: 'test-results/default.xml'
        failTaskOnFailedTests: true
